<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">


    <context:component-scan base-package="com.service"/>           <!-- 扫描service包下所有使用注解的类型 -->

    <import resource="spring-mvc.xml"/>                             <!-- 导入springmvc配置文件 -->

    <context:property-placeholder location="classpath*:mysql.properties"/>  <!-- 配置数据库相关参数properties的属性：${url} -->
    <!--<bean class="com.utils.SpringContextHolder"></bean>-->   <!--不清楚用处-->

    <!-- 数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
       <!-- <property name="driveClassName" value="${jdbc.driverClass}"/>-->    <!--删除就没有异常了-->
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- 配置SqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>

        <property name="mapperLocations" value="classpath:com/mapper/*.xml" />  <!-- 扫描mapper映射文件 使用别名 -->
        <!-- 配置分页插件 -->
        <!--<property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <value>
                            dialect=mysql
                            reasonable=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>-->
    </bean>


    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">     <!-- 配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->

        <property name="basePackage" value="com.mapper"/>       <!-- 给出需要扫描Dao接口包 -->
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>


    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 配置基于注解的声明式事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

</beans>